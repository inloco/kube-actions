// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/inloco/kube-actions/operator/pkg/apis/inloco/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ActionsRunnerLister helps list ActionsRunners.
// All objects returned here must be treated as read-only.
type ActionsRunnerLister interface {
	// List lists all ActionsRunners in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ActionsRunner, err error)
	// ActionsRunners returns an object that can list and get ActionsRunners.
	ActionsRunners(namespace string) ActionsRunnerNamespaceLister
	ActionsRunnerListerExpansion
}

// actionsRunnerLister implements the ActionsRunnerLister interface.
type actionsRunnerLister struct {
	indexer cache.Indexer
}

// NewActionsRunnerLister returns a new ActionsRunnerLister.
func NewActionsRunnerLister(indexer cache.Indexer) ActionsRunnerLister {
	return &actionsRunnerLister{indexer: indexer}
}

// List lists all ActionsRunners in the indexer.
func (s *actionsRunnerLister) List(selector labels.Selector) (ret []*v1alpha1.ActionsRunner, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ActionsRunner))
	})
	return ret, err
}

// ActionsRunners returns an object that can list and get ActionsRunners.
func (s *actionsRunnerLister) ActionsRunners(namespace string) ActionsRunnerNamespaceLister {
	return actionsRunnerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ActionsRunnerNamespaceLister helps list and get ActionsRunners.
// All objects returned here must be treated as read-only.
type ActionsRunnerNamespaceLister interface {
	// List lists all ActionsRunners in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ActionsRunner, err error)
	// Get retrieves the ActionsRunner from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ActionsRunner, error)
	ActionsRunnerNamespaceListerExpansion
}

// actionsRunnerNamespaceLister implements the ActionsRunnerNamespaceLister
// interface.
type actionsRunnerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ActionsRunners in the indexer for a given namespace.
func (s actionsRunnerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ActionsRunner, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ActionsRunner))
	})
	return ret, err
}

// Get retrieves the ActionsRunner from the indexer for a given namespace and name.
func (s actionsRunnerNamespaceLister) Get(name string) (*v1alpha1.ActionsRunner, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("actionsrunner"), name)
	}
	return obj.(*v1alpha1.ActionsRunner), nil
}
